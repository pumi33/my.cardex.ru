/* chartist-plugin-pointlabels 0.0.5
 * Copyright Â© 2017 Gion Kunz
 * Free to use under the WTFPL license.
 * http://www.wtfpl.net/
 */

/**
 * Chartist.js plugin to display a data label on top of the points in a line chart.
 *
 */
/* global Chartist */


(function(window, document, Chartist) {
    'use strict';

    var defaultOptions = {
        labelClass: 'ct-label',
        labelOffset: {
            x: 0,
            y: -10
        },
        textAnchor: 'middle',
        align: 'center',
        labelInterpolationFnc: Chartist.noop
    };

    var labelPositionCalculation = {
        point: function(data) {
            return {
                x: data.x,
                y: data.y
            };
        },
        bar: {
            left: function(data) {
                return {
                    x: data.x1,
                    y: data.y1
                };
            },
            center: function(data) {
                return {
                    x: data.x1 + (data.x2 - data.x1) / 2,
                    y: data.y1
                };
            },
            right: function(data) {
                return {
                    x: data.x2,
                    y: data.y1
                };
            }
        }
    };

    Chartist.plugins = Chartist.plugins || {};
    Chartist.plugins.ctPointLabels = function(options) {

        options = Chartist.extend({}, defaultOptions, options);

        function addLabel(position, data) {
            // if x and y exist concat them otherwise output only the existing value
            var value = data.value.x !== undefined && data.value.y ?
                (data.value.x + ', ' + data.value.y) :
                data.value.y || data.value.x;

            data.group.elem('text', {
                x: position.x + options.labelOffset.x,
                y: position.y + options.labelOffset.y,
                style: 'text-anchor: ' + options.textAnchor
            }, options.labelClass).text(options.labelInterpolationFnc(value));
        }

        return function ctPointLabels(chart) {
            switch (chart.constructor.name) {
                case 'Line':
                case 'Bar':
                    chart.on('draw', function(data) {
                        var positonCalculator = labelPositionCalculation[data.type] && labelPositionCalculation[data.type][options.align] || labelPositionCalculation[data.type];
                        if (positonCalculator) {
                            addLabel(positonCalculator(data), data);
                        }
                    });
            }
        };
    };

}(window, document, Chartist));
/*
!function(a,b){"function"==typeof define&&define.amd?define(["chartist"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("chartist")):a["Chartist.plugins.ctPointLabels"]=b(Chartist)}(this,function(a){return function(a,b,c){"use strict";var d={labelClass:"ct-label",labelOffset:{x:0,y:-10},textAnchor:"middle",align:"center",labelInterpolationFnc:c.noop},e={point:function(a){return{x:a.x,y:a.y}},bar:{left:function(a){return{x:a.x1,y:a.y1}},center:function(a){return{x:a.x1+(a.x2-a.x1)/2,y:a.y1}},right:function(a){return{x:a.x2,y:a.y1}}}};c.plugins=c.plugins||{},c.plugins.ctPointLabels=function(a){function b(b,c){var d=void 0!==c.value.x&&c.value.y?c.value.x+", "+c.value.y:c.value.y||c.value.x;c.group.elem("text",{x:b.x+a.labelOffset.x,y:b.y+a.labelOffset.y,style:"text-anchor: "+a.textAnchor},a.labelClass).text(a.labelInterpolationFnc(d))}return a=c.extend({},d,a),function(c){switch(c.constructor.name){case"Line":case"Bar":c.on("draw",function(c){var d=e[c.type]&&e[c.type][a.align]||e[c.type];d&&b(d(c),c)})}}}}(window,document,a),a.plugins.ctPointLabels});
//# sourceMappingURL=chartist-plugin-pointlabels.min.js.map

    */